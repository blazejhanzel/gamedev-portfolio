name: ðŸš€ Deploy website on push to main

on: 
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    environment:
      name: ðŸŽ‰ Build and Deploy
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: ðŸ”¨ Build using Node.js 22.18
        uses: actions/setup-node@v3
        with:
          node-version: '22.18'
      - run: npm ci
      - run: NODE_OPTIONS=--openssl-legacy-provider npm run build

      - name: ðŸŒŽ Setup Pages
        uses: actions/configure-pages@v5

      - name: ðŸ“‚ Upload files
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/'

      - name: ðŸš¢ Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # - name: ðŸ“‚ Sync files
      #   uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     username: ${{ secrets.FTP_USER }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     local-dir: ./dist/
      #     server-dir: www/